function process_odfs(f_odfs,mask_size)
%PROCESS_ODFS Clean up ODF data generated by DSI Studio.
%Removes unused variables from DSI Studio output and refactors remaining
%variables.
%
% Syntax:  process_odfs(f_odfs)
%
% Inputs:
%    f_odfs - Path of MAT file containing diffusion ODFs generated with DSI
%      Studio
%
% Examples:
%    A = process_odfs('data/odfs.mat')

% Author: David Abramian
% Department of Biomedical Engineering, Link√∂ping University, Sweden
% email: david.abramian@liu.se
% May 2021; Last revision: 13-May-2021


% check input
assert(endsWith(f_odfs, '.mat', 'IgnoreCase', true), ...
    'Expected .mat file\n%s', f_odfs)
assert(exist(f_odfs,'file')==2, 'File does not exist\n%s', f_odfs)

% load only necessary variables
load(f_odfs, 'dimension', 'fa*', 'odf*', 'odf_faces', 'odf_vertices', 'voxel_size')



vars=who;
prefix_vars='odf';
iv=0;
for ii = 1:length(vars)
     var = vars{ii}; 
    if strncmp(var, prefix_vars, length(prefix_vars))&&length(var)<7
        iv=iv+1;
    end
end
odfs =zeros(size(odf0,1),iv);
for ii = 0:iv-1
        var = ['odf',num2str(ii)];  
        odfs = cat(2, odfs, eval(var)); 
end



% combine and rename ODF variables
% odf=zy_catvars('odf',2);
% odfs = odf;

% find index of voxels having ODFs
I_odfs = find(fa0(:)>0);
odfs = odfs(:,max(odfs) > 0);

% odfs =odfs./repmat(max(odfs),size(odfs,1),1) ;
mask_odf=zeros(mask_size);
mask_odf(I_odfs)=1;

% 


% save only useful variables
save(f_odfs, 'dimension', 'I_odfs', 'odfs', 'odf_faces', 'odf_vertices', 'voxel_size','-v7.3')
mask_odf=flip(mask_odf, 2);
f_odfs_dir=dir(f_odfs);
mask_dir=[f_odfs_dir.folder '\mask_odf'];
save(mask_dir, 'mask_odf');


end

